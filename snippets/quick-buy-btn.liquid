{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
BUY BUTTONS
----------------------------------------------------------------------------------------------------------------------

This component is used to show the buy buttons

********************************************
Supported variables
********************************************

* product: the product from which to show the buttons (if empty, a placeholder is displayed)
* show_payment_button: if we show or not the dynamic checkout button
* show_gift_card_recipient: for gift card products, an optional message/email to be sent to the recipient
* atc_button_background: the background of the ATC button
* atc_button_text_color: the color of the ATC button
* payment_button_background: the background of the dynamic payment button
* payment_button_background: the color of the dynamic payment button
* form_id: if specified, define the form ID linked to this input
{%- endcomment -%}

{%- if product != blank -%}
  {%- liquid
    assign variant_picker_block = section.blocks | where: 'type', 'variant_picker' | first
    assign recipient_feature_active = false

    if product.gift_card? and show_gift_card_recipient
      assign recipient_feature_active = true
      assign show_payment_button = false
    endif
  -%}

 <product-form>
  {%- form 'product', product, id: form_id -%}
    <input type="hidden" {% if variant_picker_block != blank %}disabled{% endif %} name="id" value="{{ product.selected_or_first_available_variant.id }}">

    {% liquid
      assign button_disabled = false

      if product.selected_or_first_available_variant == nil
        assign button_disabled = true
        assign button_content = 'product.general.unavailable_button' | t
      elsif product.selected_or_first_available_variant.available == false
        assign button_disabled = true
        assign button_content = 'product.general.sold_out_button' | t
      else
        if product.template_suffix contains 'pre-order'
          assign button_content = 'product.general.pre_order_button' | t
        else
          assign button_content = 'product.general.add_to_cart_button' | t
        endif
      endif
    %}

    <div class="v-stack gap-4">
      <buy-buttons class="buy-buttons {% if show_payment_button %}buy-buttons--has-dynamic{% endif %}" form="{{ form_id }}">
        
        {%- if product.selected_or_first_available_variant.available == false or show_payment_button and atc_button_background == blank and atc_button_text_color == blank -%}
          {%- assign atc_button_style = 'outline' -%}
        {%- else -%}
          {%- assign atc_button_style = 'solid' -%}
        {%- endif -%}

        <div class="mar-flx-atc">
          <div class="mar-quantity">
            <div class="v-stack gap-1 justify-items-start">
              {%- liquid
                assign variant = product.selected_or_first_available_variant
                assign quantity_rules = ''

                render 'quantity-selector', variant: variant, form: product_form_id

                if variant.quantity_rule.min > 1
                  assign rule = 'product.quantity.minimum_of' | t: min: variant.quantity_rule.min
                  assign quantity_rules = quantity_rules | append: ' / ' | append: rule
                endif

                if variant.quantity_rule.max != nil
                  assign rule = 'product.quantity.maximum_of' | t: max: variant.quantity_rule.max
                  assign quantity_rules = quantity_rules | append: ' / ' | append: rule
                endif

                if variant.quantity_rule.increment > 1
                  assign rule = 'product.quantity.increment_of' | t: step: variant.quantity_rule.increment
                  assign quantity_rules = quantity_rules | append: ' / ' | append: rule
                endif
              -%}

              {%- if quantity_rules != blank -%}
                <p class="text-subdued text-sm">{{ quantity_rules | remove_first: ' / ' | capitalize }}</p>
              {%- endif -%}
            </div>
          </div>
          <div class="mar-atc">
            {%- render 'button', 
              content: button_content, 
              type: 'submit', 
              disabled: button_disabled, 
              style: atc_button_style, 
              background: atc_button_background, 
              text_color: atc_button_text_color, 
              stretch: true, 
              class: 'mar-disable' 
            -%}
          </div>
        </div>

        {%- if show_payment_button -%}
          {{- form | payment_button -}}

          <style>
            #{{ form_id }} .shopify-payment-button {
              {%- if payment_button_background != blank and payment_button_background != 'rgba(0,0,0,0)' -%}
                --button-background: {{ payment_button_background.rgb }};
              {%- endif -%}

              {%- if payment_button_text_color != blank and payment_button_text_color != 'rgba(0,0,0,0)' -%}
                --button-text-color: {{ payment_button_text_color.rgb }};
              {%- endif -%}

              {%- unless product.selected_or_first_available_variant.available -%}
                display: none;
              {%- endunless -%}
            }
          </style>
        {%- endif -%}

        <!-- ✅ Checkbox below Buy it now -->
        <div class="atc-checkbox-wrapper">
          <label>
            <input type="checkbox" id="agreeCheckbox">
            I agree to the terms & conditions
          </label>
        </div>

        <style>
          .mar-disable {
            opacity: 0.5;
            pointer-events: none;
            cursor: not-allowed;
          }
        </style>

      <script>
document.addEventListener("DOMContentLoaded", function() {
  const checkbox = document.getElementById("agreeCheckbox"); // ✅ use id
  const target = document.querySelector(".marquee");

  if (checkbox && target) {
    // Set initial state on load
    if (checkbox.checked) {
      target.classList.remove("mar-disable");
    } else {
      target.classList.add("mar-disable");
    }

    // Listen for changes
    checkbox.addEventListener("change", function() {
      if (this.checked) {
        target.classList.remove("mar-disable");
      } else {
        target.classList.add("mar-disable");
      }
    });
  }
});
</script>

<div class="atc-checkbox-wrapper">
  <label>
    <input type="checkbox" id="agreeCheckbox">
    I agree to the terms & conditions
  </label>
</div>

<div class="marquee mar-disable">
  This is the marquee text
</div>


      </buy-buttons>
    </div>
  {%- endform -%}
</product-form>

{%- else -%}
  <buy-buttons class="buy-buttons" template="{{ product.template_suffix | escape }}" form="{{ form_id }}">
    {%- assign button_content = 'product.general.add_to_cart_button' | t -%}
    {%- render 'button', content: button_content, type: 'submit', background: variant_picker_block.settings.atc_button_background, text_color: variant_picker.settings.atc_button_text_color, stretch: true -%}
  </buy-buttons>
{%- endif -%}
